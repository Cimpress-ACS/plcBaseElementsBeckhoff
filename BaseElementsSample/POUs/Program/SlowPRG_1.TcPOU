<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.0.19">
  <POU Name="SlowPRG_1" Id="{1880a415-9f7f-4d4a-ad15-2dcfa97d058e}">
    <Declaration><![CDATA[PROGRAM SlowPRG_1
VAR
	bolPlcStartupDone: BOOL := FALSE;
	bolHostInitDone: BOOL := FALSE;
	bolInitDone: BOOL := FALSE;
	uinTaskNbr : UINT := 3; // SlowTask is Task Nr 3
	jj:INT;
	bolCtrlRst: BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(*__________________________________________________________________________________________________
¦	
¦	Vistaprint Schweiz GmbH
¦	CH - 8401 Winterthur
¦
¦	www.vistaprint.ch - info@vistaprint.ch
¦___________________________________________________________________________________________________

Function desription:
call of all controller (FUB) for the slow task class.


History:
Version		Date			Author		Comment
---------------------------------------------------------------------------------------------------
0.00.1		06.09.2013		AVME/KVO	Start history
0.00.2		13.01.2014		AVME/PRE	Implement Starting Up Process
___________________________________________________________________________________________________*)

// -----------------------------------------------------------------------------------------------
// Initialize the PLC Parameter and check the PLC health
// -----------------------------------------------------------------------------------------------
IF (NOT bolPlcStartupDone) AND (g_uinStartProzess>=(uinTaskNbr-1)) THEN
	bolPlcStartupDone := TRUE;	
	g_uinStartProzess := g_uinStartProzess + 1; // For StartUp order
	
	// init	
END_IF
// -----------------------------------------------------------------------------------------------


// -----------------------------------------------------------------------------------------------
// The host system is downloading all parameter at startup. 
// bolPlcStartupDone will be set to true after the Host is done with the initialization
// -----------------------------------------------------------------------------------------------
IF (bolPlcStartupDone AND (NOT bolHostInitDone) AND NOT bolInitDone AND (g_uinStartProzess>=(uinTaskNbr-1)+10)) THEN
	bolHostInitDone := TRUE;
	g_uinStartProzess := g_uinStartProzess + 1; // For StartUp order
END_IF
// -----------------------------------------------------------------------------------------------


// -----------------------------------------------------------------------------------------------
// Start PLC code initialization
// -----------------------------------------------------------------------------------------------
IF NOT bolInitDone AND bolPlcStartupDone AND bolHostInitDone AND (g_uinStartProzess>=(uinTaskNbr-1)+20) THEN
		
	bolInitDone := TRUE;
	g_uinStartProzess := g_uinStartProzess + 1; // For StartUp order
END_IF
// -----------------------------------------------------------------------------------------------

// -----------------------------------------------------------------------------------------------
// Normal Run mode after all the initialization is done
// -----------------------------------------------------------------------------------------------
IF (bolInitDone AND bolPlcStartupDone AND bolHostInitDone AND (g_uinStartProzess>=(20+c_uinCntTaskClass))) THEN
	
	//****************************************************************************************************
	// cyclic controller calls
	//****************************************************************************************************
	// call alarm message handler
	g_p_fbAlm_Man^(bolCtrlRst:= bolCtrlRst);
	IF (bolCtrlRst) THEN
		FOR jj:=0 TO E_CtrlId.E_CtrlIdMax BY 1 DO
			IF (g_a_pCtrlCIf[jj]<>0) THEN // check if entry exist
				g_a_pCtrlCIf[jj]^.Job.bolAlmReset := TRUE;
			END_IF
		END_FOR
		bolCtrlRst := FALSE;
	END_IF

END_IF
// -----------------------------------------------------------------------------------------------]]></ST>
    </Implementation>
    <ObjectProperties />
  </POU>
</TcPlcObject>